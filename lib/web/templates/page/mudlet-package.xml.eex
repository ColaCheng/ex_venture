<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE MudletPackage>
<MudletPackage version="1.001">
    <TriggerPackage>
        <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
            <name>Login Trigger</name>
            <script>sendGMCP(&quot;Core.Supports.Set [\&quot;Character.Vitals 1\&quot;, \&quot;Room.Info 1\&quot;, \&quot;Target.You 1\&quot;, \&quot;Channels.Broadcast 1\&quot;]&quot;)</script>
            <triggerType>0</triggerType>
            <conditonLineDelta>0</conditonLineDelta>
            <mStayOpen>0</mStayOpen>
            <mCommand></mCommand>
            <packageName>ExVenture</packageName>
            <mFgColor>#ff0000</mFgColor>
            <mBgColor>#ffff00</mBgColor>
            <mSoundFile></mSoundFile>
            <colorTriggerFgColor>#000000</colorTriggerFgColor>
            <colorTriggerBgColor>#000000</colorTriggerBgColor>
            <regexCodeList>
              <string>Your one time password</string>
            </regexCodeList>
            <regexCodePropertyList>
                <integer>0</integer>
            </regexCodePropertyList>
        </Trigger>
        <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
          <name>Login link</name>
          <script>openWebPage(multimatches[3][1])</script>
          <triggerType>0</triggerType>
          <conditonLineDelta>2</conditonLineDelta>
          <mStayOpen>0</mStayOpen>
          <mCommand></mCommand>
          <packageName></packageName>
          <mFgColor>#ff0000</mFgColor>
          <mBgColor>#ffff00</mBgColor>
          <mSoundFile></mSoundFile>
          <colorTriggerFgColor>#000000</colorTriggerFgColor>
          <colorTriggerBgColor>#000000</colorTriggerBgColor>
          <regexCodeList>
            <string>Please sign in via the website and get a one time password.</string>
            <string>1</string>
            <string>^http.+</string>
          </regexCodeList>
          <regexCodePropertyList>
            <integer>3</integer>
            <integer>5</integer>
            <integer>1</integer>
          </regexCodePropertyList>
        </Trigger>
    </TriggerPackage>
    <TimerPackage/>
    <AliasPackage/>
    <ActionPackage/>
    <ScriptPackage>
            <ScriptGroup isActive="yes" isFolder="yes">
                <name>CSSman</name>
                <packageName>CSSman</packageName>
                <script></script>
                <eventHandlerList/>
                <Script isActive="yes" isFolder="no">
                    <name>CSSMan</name>
                    <packageName></packageName>
                    <script>-- CSSMan by Vadi. Public domain.

CSSMan = {}
CSSMan.__index = CSSMan

function CSSMan.new(stylesheet)
  local obj  = { stylesheet = {} }
  setmetatable(obj,CSSMan)
  local trim = string.trim

  assert(type(stylesheet) == &quot;string&quot;, &quot;CSSMan.new: no stylesheet provided. A possible error is that you might have used CSSMan.new, not CSSMan:new&quot;)

  for line in stylesheet:gmatch(&quot;[^\r\n]+&quot;) do
    local attribute, value = line:match(&quot;^(.-):(.-);$&quot;)
    if attribute and value then
      attribute, value = trim(attribute), trim(value)
      obj.stylesheet[attribute] = value
    end
  end

  return obj
end

function CSSMan:set(key, value)
  self.stylesheet[key] = value
end

function CSSMan:get(key)
  return self.stylesheet[key]
end

function CSSMan:getCSS(key)
  local lines, concat = {}, table.concat
  for k,v in pairs(self.stylesheet) do lines[#lines+1] = concat({k,&quot;: &quot;, v, &quot;;&quot;}) end
  return concat(lines, &quot;\n&quot;)
end

function CSSMan:gettable()
  return self.stylesheet
end

function CSSMan:settable(tbl)
  assert(type(tbl) == &quot;table&quot;, &quot;CSSMan:settable: table expected, got &quot;..type(tbl))

  self.stylesheet = tbl
end</script>
                    <eventHandlerList/>
                </Script>
            </ScriptGroup>
            <ScriptGroup isActive="yes" isFolder="yes">
                <name>GUI</name>
                <packageName></packageName>
                <script>GUI = GUI or {}
                </script>
                <eventHandlerList/>
                <Script isActive="yes" isFolder="no">
                    <name>Set Borders</name>
                    <packageName></packageName>
                    <script>-- Based off of https://forums.mudlet.org/viewtopic.php?t=4098

local w,h = getMainWindowSize()
setBorderRight(w / 4)
setBorderBottom(h / 20)</script>
                    <eventHandlerList/>
                </Script>
                <Script isActive="yes" isFolder="no">
                    <name>Create Background</name>
                    <packageName></packageName>
                    <script>-- Based off of https://forums.mudlet.org/viewtopic.php?t=4098

GUI.BackgroundCSS = CSSMan.new([[
  background-color: <%= Config.color_background() %>;
]])

GUI.Right = Geyser.Label:new({
  name = &quot;GUI.Right&quot;,
  x = &quot;-25%&quot;, y = 0,
  width = &quot;25%&quot;,
  height = &quot;95%&quot;,
})
GUI.Right:setStyleSheet(GUI.BackgroundCSS:getCSS())

GUI.Bottom = Geyser.Label:new({
  name = &quot;GUI.Bottom&quot;,
	x = &quot;0%&quot;, y = &quot;95%&quot;,
  width = &quot;100%&quot;,
  height = &quot;5%&quot;,
})
GUI.Bottom:setStyleSheet(GUI.BackgroundCSS:getCSS())</script>
                    <eventHandlerList/>
                </Script>
                <Script isActive="yes" isFolder="no">
                    <name>Gauges</name>
                    <packageName></packageName>
                    <script>-- Based off of https://forums.mudlet.org/viewtopic.php?t=4098

GUI.Footer = Geyser.HBox:new({
  name = &quot;GUI.Footer&quot;,
  x = 0, y = 0,
  width = &quot;100%&quot;,
  height = &quot;100%&quot;,
}, GUI.Bottom)

GUI.GaugeBackCSS = CSSMan.new([[
  border-style: solid;
  border-color: white;
  border-width: 1px;
  border-radius: 5px;
  margin: 5px;
]])

GUI.GaugeFrontCSS = CSSMan.new([[
  border-style: solid;
  border-color: white;
  border-width: 1px;
  border-radius: 5px;
  margin: 5px;
  font-family: monospace;
]])

GUI.Health = Geyser.Gauge:new({
  name = &quot;GUI.Health&quot;,
},GUI.Footer)
GUI.GaugeBackCSS:set(&quot;background-color&quot;, &quot;<%= Config.color_health_bar_background() %>&quot;)
GUI.Health.back:setStyleSheet(GUI.GaugeBackCSS:getCSS())
GUI.GaugeFrontCSS:set(&quot;background-color&quot;, &quot;<%= Config.color_health_bar() %>&quot;)
GUI.Health.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
GUI.Health.front:echo(&quot;Health Points&quot;)

GUI.Skill = Geyser.Gauge:new({
  name = &quot;GUI.Skill&quot;,
},GUI.Footer)
GUI.GaugeBackCSS:set(&quot;background-color&quot;, &quot;<%= Config.color_skill_bar_background() %>&quot;)
GUI.Skill.back:setStyleSheet(GUI.GaugeBackCSS:getCSS())
GUI.GaugeFrontCSS:set(&quot;background-color&quot;, &quot;<%= Config.color_skill_bar() %>&quot;)
GUI.Skill.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
GUI.Skill.front:echo(&quot;Skill Points&quot;)

GUI.Move = Geyser.Gauge:new({
  name = &quot;GUI.Move&quot;,
},GUI.Footer)
GUI.GaugeBackCSS:set(&quot;background-color&quot;, &quot;<%= Config.color_move_bar_background() %>&quot;)
GUI.Move.back:setStyleSheet(GUI.GaugeBackCSS:getCSS())
GUI.GaugeFrontCSS:set(&quot;background-color&quot;, &quot;<%= Config.color_move_bar() %>&quot;)
GUI.Move.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
GUI.Move.front:echo(&quot;Move Points&quot;)</script>
                    <eventHandlerList/>
                </Script>
                <Script isActive="yes" isFolder="no">
                    <name>Chat Box</name>
                    <packageName></packageName>
                    <script>-- Based off of https://forums.mudlet.org/viewtopic.php?t=4098

GUI.Sidebar = Geyser.Container:new({
  name = &quot;GUI.Sidebar&quot;,
  x = 0, y = &quot;50%&quot;,
  width = &quot;100%&quot;,
  height = &quot;50%&quot;,
}, GUI.Right)</script>
                    <eventHandlerList/>
                </Script>
                <Script isActive="yes" isFolder="no">
                    <name>Mapper</name>
                    <packageName></packageName>
                    <script>GUI.Mapper = Geyser.Mapper:new({
  name = &quot;GUI.Mapper&quot;,
  x = 0, y = 0,
  width = &quot;100%&quot;, height = &quot;50%&quot;
}, GUI.Right)</script>
                    <eventHandlerList/>
                </Script>
            </ScriptGroup>
            <ScriptGroup isActive="yes" isFolder="yes">
                <name>GMCP</name>
                <packageName></packageName>
                <script></script>
                <Script isActive="yes" isFolder="no">
                    <name>updateVitals</name>
                    <packageName></packageName>
                    <script>function updateVitals()
  local health_points = tonumber(gmcp.Character.Vitals.health_points)
  local max_health_points = tonumber(gmcp.Character.Vitals.max_health_points)
  local skill_points = tonumber(gmcp.Character.Vitals.skill_points)
  local max_skill_points = tonumber(gmcp.Character.Vitals.max_skill_points)
  local move_points = tonumber(gmcp.Character.Vitals.move_points)
  local max_move_points = tonumber(gmcp.Character.Vitals.max_move_points)

  GUI.Health:setValue(health_points, max_health_points, string.format(&quot;%d/%d hp&quot;, health_points, max_health_points))
  GUI.Skill:setValue(skill_points, max_skill_points, string.format(&quot;%d/%d sp&quot;, skill_points, max_skill_points))
  GUI.Move:setValue(move_points, max_move_points, string.format(&quot;%d/%d mv&quot;, move_points, max_move_points))
end</script>
                    <eventHandlerList>
                        <string>gmcp.Character.Vitals</string>
                    </eventHandlerList>
                </Script>
                <Script isActive="yes" isFolder="no">
                    <name>targetYou</name>
                    <packageName></packageName>
                    <script>function targetYou()
  alert(1)
end</script>
                    <eventHandlerList>
                        <string>gmcp.Target.You</string>
                    </eventHandlerList>
                </Script>
                <Script isActive="yes" isFolder="no">
                    <name>channelsBroadcast</name>
                    <packageName></packageName>
                    <script>function channelsBroadcast()
  local broadcast = gmcp.Channels.Broadcast
  local message = string.format("[%s] %s says, \"%s\"", broadcast.channel, broadcast.from.name, broadcast.message)
  --GUI.ChatBox:echo(message .. "\n")
end</script>
                    <eventHandlerList>
                        <string>gmcp.Channels.Broadcast</string>
                    </eventHandlerList>
                </Script>
                <Script isActive="yes" isFolder="no">
                  <name>exventureMapper</name>
                  <packageName></packageName>
                  <script>mudlet = mudlet or {}; mudlet.mapper_script = true

function doSpeedWalk()
  send(&quot;run &quot; .. table.concat(speedWalkDir, &quot;&quot;))
end

local environment_data = {
  -- colour = environment name, colour
  [&quot;blue&quot;]       = {{&quot;ocean&quot;, 4}, {&quot;lake&quot;, 4}, {&quot;river&quot;, 4}},
  [&quot;brown&quot;]      = {{&quot;mountain&quot;, 1}, {&quot;road&quot;, 1}},
  [&quot;green&quot;]      = {{&quot;hill&quot;, 2}, {&quot;field&quot;, 2}, {&quot;meadow&quot;, 2}},
  [&quot;dark_green&quot;] = {{&quot;forest&quot;, 10}, {&quot;jungle&quot;, 10}},
  [&quot;grey&quot;]       = {{&quot;town&quot;, 8}, {&quot;dungeon&quot;, 8}, {&quot;default&quot;, 8}},
  [&quot;light_grey&quot;] = {{&quot;inside&quot;, 7}}
}

-- environment name = id
envids = {}

for colour, environments in pairs(environment_data) do
  for _, environment in ipairs(environments) do
    local name, id = environment[1], environment[2]

    --  257-272 are the default colors the user can adjust in mapper settings tab
    id = id + 256
    local r,g,b = unpack(color_table[colour])
    setCustomEnvColor(id, r, g, b, 255)

    envids[name] = id
  end
end

function exventureMapper()
  local room = gmcp.Room.Info
  local zone = gmcp.Room.Info.zone

  setAreaName(zone.id, zone.name)
  addRoom(room.id)
  setRoomCoordinates(room.id, room.x, -1 * room.y, room.map_layer)
  setRoomArea(room.id, zone.id)
  setRoomEnv(room.id, envids[room.ecology])
  centerview(room.id)

  for i, exit in ipairs(room.exits) do
    setExit(room.id, exit.room_id, exit.direction)
  end
end</script>
                  <eventHandlerList>
                    <string>gmcp.Room.Info</string>
                  </eventHandlerList>
                </Script>
        </ScriptGroup>
    </ScriptPackage>
    <KeyPackage/>
</MudletPackage>
