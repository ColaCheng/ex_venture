<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE MudletPackage>
<MudletPackage version="1.001">
    <TriggerPackage>
        <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
            <name>Login Trigger</name>
            <script>sendGMCP(&quot;Core.Supports.Set [\&quot;Character.Vitals 1\&quot;, \&quot;Room.Info 1\&quot;, \&quot;Target.You 1\&quot;, \&quot;Channels.Broadcast 1\&quot;]&quot;)</script>
            <triggerType>0</triggerType>
            <conditonLineDelta>0</conditonLineDelta>
            <mStayOpen>0</mStayOpen>
            <mCommand></mCommand>
            <packageName>ExVenture</packageName>
            <mFgColor>#ff0000</mFgColor>
            <mBgColor>#ffff00</mBgColor>
            <mSoundFile></mSoundFile>
            <colorTriggerFgColor>#000000</colorTriggerFgColor>
            <colorTriggerBgColor>#000000</colorTriggerBgColor>
            <regexCodeList>
              <string>Your one time password</string>
            </regexCodeList>
            <regexCodePropertyList>
                <integer>0</integer>
            </regexCodePropertyList>
        </Trigger>
        <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
          <name>Login link</name>
          <script>openWebPage(multimatches[3][1])</script>
          <triggerType>0</triggerType>
          <conditonLineDelta>2</conditonLineDelta>
          <mStayOpen>0</mStayOpen>
          <mCommand></mCommand>
          <packageName></packageName>
          <mFgColor>#ff0000</mFgColor>
          <mBgColor>#ffff00</mBgColor>
          <mSoundFile></mSoundFile>
          <colorTriggerFgColor>#000000</colorTriggerFgColor>
          <colorTriggerBgColor>#000000</colorTriggerBgColor>
          <regexCodeList>
            <string>Please sign in via the website and get a one time password.</string>
            <string>1</string>
            <string>^http.+</string>
          </regexCodeList>
          <regexCodePropertyList>
            <integer>3</integer>
            <integer>5</integer>
            <integer>1</integer>
          </regexCodePropertyList>
        </Trigger>
        <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
            <name>Channel Chat</name>
            <script>demonnic.chat:append(&quot;Channels&quot;)</script>
            <triggerType>0</triggerType>
            <conditonLineDelta>39</conditonLineDelta>
            <mStayOpen>0</mStayOpen>
            <mCommand></mCommand>
            <packageName></packageName>
            <mFgColor>#ff0000</mFgColor>
            <mBgColor>#ffff00</mBgColor>
            <mSoundFile></mSoundFile>
            <colorTriggerFgColor>#000000</colorTriggerFgColor>
            <colorTriggerBgColor>#000000</colorTriggerBgColor>
            <regexCodeList>
                <string>^\[\w*]</string>
            </regexCodeList>
            <regexCodePropertyList>
                <integer>1</integer>
            </regexCodePropertyList>
        </Trigger>
        <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
            <name>Tell Chat</name>
            <script>demonnic.chat:append(&quot;Tells&quot;)</script>
            <triggerType>0</triggerType>
            <conditonLineDelta>39</conditonLineDelta>
            <mStayOpen>0</mStayOpen>
            <mCommand></mCommand>
            <packageName></packageName>
            <mFgColor>#ff0000</mFgColor>
            <mBgColor>#ffff00</mBgColor>
            <mSoundFile></mSoundFile>
            <colorTriggerFgColor>#000000</colorTriggerFgColor>
            <colorTriggerBgColor>#000000</colorTriggerBgColor>
            <regexCodeList>
                <string> tells you, "</string>
                <string>You tell </string>
            </regexCodeList>
            <regexCodePropertyList>
                <integer>0</integer>
                <integer>2</integer>
            </regexCodePropertyList>
        </Trigger>
        <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
            <name>Local Chat</name>
            <script>demonnic.chat:append(&quot;Local&quot;)</script>
            <triggerType>0</triggerType>
            <conditonLineDelta>39</conditonLineDelta>
            <mStayOpen>0</mStayOpen>
            <mCommand></mCommand>
            <packageName></packageName>
            <mFgColor>#ff0000</mFgColor>
            <mBgColor>#ffff00</mBgColor>
            <mSoundFile></mSoundFile>
            <colorTriggerFgColor>#000000</colorTriggerFgColor>
            <colorTriggerBgColor>#000000</colorTriggerBgColor>
            <regexCodeList>
                <string>^[^\[].+ says?,</string>
            </regexCodeList>
            <regexCodePropertyList>
                <integer>1</integer>
            </regexCodePropertyList>
        </Trigger>
    </TriggerPackage>
    <TimerPackage/>
    <AliasPackage>
        <AliasGroup isActive="yes" isFolder="yes">
            <name>YATCO</name>
            <script></script>
            <command></command>
            <packageName></packageName>
            <regex></regex>
            <AliasGroup isActive="yes" isFolder="yes">
                <name>Shared</name>
                <script></script>
                <command></command>
                <packageName></packageName>
                <regex></regex>
                <Alias isActive="yes" isFolder="no">
                    <name>Reset chasing</name>
                    <script>demonnic.chaser:reset()</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^chaseres$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>Debug</name>
                    <script>if matches[2] then
  demonnic:listCategories()
else
  demonnic:toggleDebug()
end</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^debug(?: (list))?$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>debug categories</name>
                    <script>if matches[2] then
  demonnic:watchCategory( matches[2] )
else
  demonnic:listCategories()
end</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^debugc(?: (.*))?$</regex>
                </Alias>
            </AliasGroup>
        </AliasGroup>
    </AliasPackage>
    <ActionPackage/>
    <ScriptPackage>
            <ScriptGroup isActive="yes" isFolder="yes">
                <name>CSSman</name>
                <packageName>CSSman</packageName>
                <script></script>
                <eventHandlerList/>
                <Script isActive="yes" isFolder="no">
                    <name>CSSMan</name>
                    <packageName></packageName>
                    <script>-- CSSMan by Vadi. Public domain.

CSSMan = {}
CSSMan.__index = CSSMan

function CSSMan.new(stylesheet)
  local obj  = { stylesheet = {} }
  setmetatable(obj,CSSMan)
  local trim = string.trim

  assert(type(stylesheet) == &quot;string&quot;, &quot;CSSMan.new: no stylesheet provided. A possible error is that you might have used CSSMan.new, not CSSMan:new&quot;)

  for line in stylesheet:gmatch(&quot;[^\r\n]+&quot;) do
    local attribute, value = line:match(&quot;^(.-):(.-);$&quot;)
    if attribute and value then
      attribute, value = trim(attribute), trim(value)
      obj.stylesheet[attribute] = value
    end
  end

  return obj
end

function CSSMan:set(key, value)
  self.stylesheet[key] = value
end

function CSSMan:get(key)
  return self.stylesheet[key]
end

function CSSMan:getCSS(key)
  local lines, concat = {}, table.concat
  for k,v in pairs(self.stylesheet) do lines[#lines+1] = concat({k,&quot;: &quot;, v, &quot;;&quot;}) end
  return concat(lines, &quot;\n&quot;)
end

function CSSMan:gettable()
  return self.stylesheet
end

function CSSMan:settable(tbl)
  assert(type(tbl) == &quot;table&quot;, &quot;CSSMan:settable: table expected, got &quot;..type(tbl))

  self.stylesheet = tbl
end</script>
                    <eventHandlerList/>
                </Script>
            </ScriptGroup>
            <ScriptGroup isActive="yes" isFolder="yes">
                <name>GUI</name>
                <packageName></packageName>
                <script>GUI = GUI or {}
                </script>
                <eventHandlerList/>
                <Script isActive="yes" isFolder="no">
                    <name>Set Borders</name>
                    <packageName></packageName>
                    <script>-- Based off of https://forums.mudlet.org/viewtopic.php?t=4098

local w, h = getMainWindowSize()
setBorderRight(w / 4)
setBorderBottom(h / 20)

local r = <%= Color.hex_to_rgb(Config.color_background())[:red] %>
local g = <%= Color.hex_to_rgb(Config.color_background())[:green] %>
local b = <%= Color.hex_to_rgb(Config.color_background())[:blue] %>

GUI.windowColors = {
  r = r,
  g = g,
  b = b,
}

setFontSize(16)
--setBackgroundColor("main", r, g, b)</script>
                    <eventHandlerList/>
                </Script>
                <Script isActive="yes" isFolder="no">
                    <name>Create Background</name>
                    <packageName></packageName>
                    <script>-- Based off of https://forums.mudlet.org/viewtopic.php?t=4098

GUI.BackgroundCSS = CSSMan.new([[
  background-color: <%= Config.color_background() %>;
]])

GUI.Right = Geyser.Label:new({
  name = &quot;GUI.Right&quot;,
  x = &quot;-25%&quot;, y = 0,
  width = &quot;25%&quot;,
  height = &quot;95%&quot;,
})
GUI.Right:setStyleSheet(GUI.BackgroundCSS:getCSS())

GUI.Bottom = Geyser.Label:new({
  name = &quot;GUI.Bottom&quot;,
	x = &quot;0%&quot;, y = &quot;95%&quot;,
  width = &quot;100%&quot;,
  height = &quot;5%&quot;,
})
GUI.Bottom:setStyleSheet(GUI.BackgroundCSS:getCSS())</script>
                    <eventHandlerList/>
                </Script>
                <Script isActive="yes" isFolder="no">
                    <name>Gauges</name>
                    <packageName></packageName>
                    <script>-- Based off of https://forums.mudlet.org/viewtopic.php?t=4098

GUI.Footer = Geyser.HBox:new({
  name = &quot;GUI.Footer&quot;,
  x = 0, y = 0,
  width = &quot;100%&quot;,
  height = &quot;100%&quot;,
}, GUI.Bottom)

GUI.GaugeBackCSS = CSSMan.new([[
  border-style: solid;
  border-color: white;
  border-width: 1px;
  border-radius: 5px;
  margin: 5px;
]])

GUI.GaugeFrontCSS = CSSMan.new([[
  border-style: solid;
  border-color: white;
  border-width: 1px;
  border-radius: 5px;
  margin: 5px;
  font-family: monospace;
]])

GUI.Health = Geyser.Gauge:new({
  name = &quot;GUI.Health&quot;,
},GUI.Footer)
GUI.GaugeBackCSS:set(&quot;background-color&quot;, &quot;<%= Config.color_health_bar_background() %>&quot;)
GUI.Health.back:setStyleSheet(GUI.GaugeBackCSS:getCSS())
GUI.GaugeFrontCSS:set(&quot;background-color&quot;, &quot;<%= Config.color_health_bar() %>&quot;)
GUI.Health.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
GUI.Health.front:echo(&quot;Health Points&quot;)

GUI.Skill = Geyser.Gauge:new({
  name = &quot;GUI.Skill&quot;,
},GUI.Footer)
GUI.GaugeBackCSS:set(&quot;background-color&quot;, &quot;<%= Config.color_skill_bar_background() %>&quot;)
GUI.Skill.back:setStyleSheet(GUI.GaugeBackCSS:getCSS())
GUI.GaugeFrontCSS:set(&quot;background-color&quot;, &quot;<%= Config.color_skill_bar() %>&quot;)
GUI.Skill.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
GUI.Skill.front:echo(&quot;Skill Points&quot;)

GUI.Move = Geyser.Gauge:new({
  name = &quot;GUI.Move&quot;,
},GUI.Footer)
GUI.GaugeBackCSS:set(&quot;background-color&quot;, &quot;<%= Config.color_move_bar_background() %>&quot;)
GUI.Move.back:setStyleSheet(GUI.GaugeBackCSS:getCSS())
GUI.GaugeFrontCSS:set(&quot;background-color&quot;, &quot;<%= Config.color_move_bar() %>&quot;)
GUI.Move.front:setStyleSheet(GUI.GaugeFrontCSS:getCSS())
GUI.Move.front:echo(&quot;Move Points&quot;)</script>
                    <eventHandlerList/>
                </Script>
                <Script isActive="yes" isFolder="no">
                    <name>Chat Box</name>
                    <packageName></packageName>
                    <script>-- Based off of https://forums.mudlet.org/viewtopic.php?t=4098

GUI.Sidebar = Geyser.Container:new({
  name = &quot;GUI.Sidebar&quot;,
  x = 0, y = &quot;50%&quot;,
  width = &quot;100%&quot;,
  height = &quot;50%&quot;,
}, GUI.Right)</script>
                    <eventHandlerList/>
                </Script>
                <Script isActive="yes" isFolder="no">
                    <name>Mapper</name>
                    <packageName></packageName>
                    <script>GUI.Mapper = Geyser.Mapper:new({
  name = &quot;GUI.Mapper&quot;,
  x = 0, y = 0,
  width = &quot;100%&quot;, height = &quot;50%&quot;
}, GUI.Right)</script>
                    <eventHandlerList/>
                </Script>
            </ScriptGroup>
            <ScriptGroup isActive="yes" isFolder="yes">
                <name>GMCP</name>
                <packageName></packageName>
                <script></script>
                <Script isActive="yes" isFolder="no">
                    <name>updateVitals</name>
                    <packageName></packageName>
                    <script>function updateVitals()
  local health_points = tonumber(gmcp.Character.Vitals.health_points)
  local max_health_points = tonumber(gmcp.Character.Vitals.max_health_points)
  local skill_points = tonumber(gmcp.Character.Vitals.skill_points)
  local max_skill_points = tonumber(gmcp.Character.Vitals.max_skill_points)
  local move_points = tonumber(gmcp.Character.Vitals.move_points)
  local max_move_points = tonumber(gmcp.Character.Vitals.max_move_points)

  GUI.Health:setValue(health_points, max_health_points, string.format(&quot;%d/%d hp&quot;, health_points, max_health_points))
  GUI.Skill:setValue(skill_points, max_skill_points, string.format(&quot;%d/%d sp&quot;, skill_points, max_skill_points))
  GUI.Move:setValue(move_points, max_move_points, string.format(&quot;%d/%d mv&quot;, move_points, max_move_points))
end</script>
                    <eventHandlerList>
                        <string>gmcp.Character.Vitals</string>
                    </eventHandlerList>
                </Script>
                <Script isActive="yes" isFolder="no">
                    <name>targetYou</name>
                    <packageName></packageName>
                    <script>function targetYou()
  alert(1)
end</script>
                    <eventHandlerList>
                        <string>gmcp.Target.You</string>
                    </eventHandlerList>
                </Script>
                <Script isActive="yes" isFolder="no">
                  <name>exventureMapper</name>
                  <packageName></packageName>
                  <script>mudlet = mudlet or {}; mudlet.mapper_script = true

function doSpeedWalk()
  send(&quot;run &quot; .. table.concat(speedWalkDir, &quot;&quot;))
end

local environment_data = {
  -- colour = environment name, colour
  [&quot;blue&quot;]       = {{&quot;ocean&quot;, 4}, {&quot;lake&quot;, 4}, {&quot;river&quot;, 4}},
  [&quot;brown&quot;]      = {{&quot;mountain&quot;, 1}, {&quot;road&quot;, 1}},
  [&quot;green&quot;]      = {{&quot;hill&quot;, 2}, {&quot;field&quot;, 2}, {&quot;meadow&quot;, 2}},
  [&quot;dark_green&quot;] = {{&quot;forest&quot;, 10}, {&quot;jungle&quot;, 10}},
  [&quot;grey&quot;]       = {{&quot;town&quot;, 8}, {&quot;dungeon&quot;, 8}, {&quot;default&quot;, 8}},
  [&quot;light_grey&quot;] = {{&quot;inside&quot;, 7}}
}

-- environment name = id
envids = {}

for colour, environments in pairs(environment_data) do
  for _, environment in ipairs(environments) do
    local name, id = environment[1], environment[2]

    --  257-272 are the default colors the user can adjust in mapper settings tab
    id = id + 256
    local r,g,b = unpack(color_table[colour])
    setCustomEnvColor(id, r, g, b, 255)

    envids[name] = id
  end
end

function exventureMapper()
  local room = gmcp.Room.Info
  local zone = gmcp.Room.Info.zone

  setAreaName(zone.id, zone.name)
  addRoom(room.id)
  setRoomCoordinates(room.id, room.x, -1 * room.y, room.map_layer)
  setRoomArea(room.id, zone.id)
  setRoomEnv(room.id, envids[room.ecology])
  centerview(room.id)

  for i, exit in ipairs(room.exits) do
    if not setExit(room.id, exit.room_id, exit.direction) then
      -- if the room linking to hasn&apos;t been made yet, create a stub instead
      setExitStub(room.id, exit.direction, true)
    end
  end
end</script>
                  <eventHandlerList>
                    <string>gmcp.Room.Info</string>
                  </eventHandlerList>
                </Script>
        </ScriptGroup>        <ScriptGroup isActive="yes" isFolder="yes">
        <name>YATCOConfig</name>
        <packageName></packageName>
        <script>demonnic = demonnic or {}
demonnic.chat = demonnic.chat or {}
demonnic.chat.config = demonnic.chat.config or {}</script>
        <eventHandlerList/>
        <Script isActive="yes" isFolder="no">
            <name>Configuration Options</name>
            <packageName></packageName>
            <script>--[[
Tabbed chat configuration. Based on YATCO.

https://github.com/demonnic/YATCO
]]

demonnic.chat.useContainer = GUI.Sidebar

demonnic.chat.config.timestamp = &quot;HH:mm:ss&quot;

demonnic.chat.config.channels = {
  &quot;All&quot;,
  &quot;Channels&quot;,
  &quot;Tells&quot;,
  &quot;Local&quot;,
}

demonnic.chat.config.Alltab = &quot;All&quot;

demonnic.chat.config.fontSize = 12

--[[
Dynamic text wrapping for the miniconsole
]]

local fontWidth, fontHeight = calcFontSize(demonnic.chat.config.fontSize)
local sidebarWidth = GUI.Sidebar.get_width()
local sidebarHeight = GUI.Sidebar.get_height()

demonnic.chat.config.lines = math.floor(sidebarHeight / fontHeight)
demonnic.chat.config.width = math.floor(sidebarWidth / fontWidth)

--[[
Colors
]]

demonnic.chat.config.activeColors = {
  r = 180,
  g = 180,
  b = 180,
}

demonnic.chat.config.inactiveColors = {
  r = 60,
  g = 60,
  b = 60,
}

demonnic.chat.config.windowColors = GUI.windowColors

demonnic.chat.config.activeTabText = &quot;black&quot;

demonnic.chat.config.inactiveTabText = &quot;white&quot;

demonnic.chat.currentTab = demonnic.chat.currentTab or demonnic.chat.config.Alltab or demonnic.chat.config.channels[1]
</script>
            <eventHandlerList/>
        </Script>
      </ScriptGroup><ScriptGroup isActive="yes" isFolder="yes">
          <name>YATCO</name>
          <packageName></packageName>
          <script></script>
          <eventHandlerList/>
          <ScriptGroup isActive="yes" isFolder="yes">
              <name>Shared</name>
              <packageName></packageName>
              <script>--Bootstrapping variables/etc. Don't touch this unless you really know what you're doing

--I mean it. I'll point. AND laugh. loudly.
demonnic = demonnic or {}
demonnic.config = demonnic.config or {}
demonnic.debug = demonnic.debug or {}
demonnic.debug.active = demonnic.debug.active or nil
demonnic.debug.categories = demonnic.debug.categories or { }


function demonnic:echo(msg)
cecho(string.format(&quot;\n&lt;blue&gt;(&lt;green&gt;Demonnic&lt;blue&gt;):&lt;white&gt; %s&quot;, msg))
end</script>
              <eventHandlerList/>
              <Script isActive="yes" isFolder="no">
                  <name>Geyser Additions</name>
                  <packageName></packageName>
                  <script>function Geyser.MiniConsole:clear()
 clearWindow(self.name)
end

function Geyser.MiniConsole:append()
appendBuffer(self.name)
end</script>
                  <eventHandlerList/>
              </Script>
          </ScriptGroup>
          <ScriptGroup isActive="yes" isFolder="yes">
              <name>Tabbed Chat</name>
              <packageName></packageName>
              <script>--Do not remove the following lines. Or change them.
demonnic = demonnic or {}
demonnic.chat = demonnic.chat or {}
demonnic.chat.tabsToBlink = demonnic.chat.tabsToBlink or {}
demonnic.chat.tabs = demonnic.chat.tabs or {}
demonnic.chat.windows = demonnic.chat.windows or {}</script>
              <eventHandlerList/>
              <Script isActive="yes" isFolder="no">
                  <name>Code</name>
                  <packageName></packageName>
                  <script>--[[
If the label callbacks ever decide to start taking a function which is part of a table, 0then this will change.
Or if it's modified to take actual functions. Anonymouse function clickcallback would be awfully nice.
]]

function demonnicChatSwitch(chat)
  local r = demonnic.chat.config.inactiveColors.r
  local g = demonnic.chat.config.inactiveColors.g
  local b = demonnic.chat.config.inactiveColors.b
  local newr = demonnic.chat.config.activeColors.r
  local newg = demonnic.chat.config.activeColors.g
  local newb = demonnic.chat.config.activeColors.b
  local oldchat = demonnic.chat.currentTab

  if demonnic.chat.currentTab ~= chat then
    demonnic.chat.windows[oldchat]:hide()
    demonnic.chat.tabs[oldchat]:setColor(r,g,b)
    demonnic.chat.tabs[oldchat]:echo(oldchat, demonnic.chat.config.inactiveTabText, &quot;c&quot;)
  end

  demonnic.chat.tabs[chat]:setColor(newr,newg,newb)
  demonnic.chat.tabs[chat]:echo(chat, demonnic.chat.config.activeTabText, &quot;c&quot;)
  demonnic.chat.windows[chat]:show()
  demonnic.chat.currentTab = chat
end

function demonnic.chat:resetUI()
  demonnic.chat.container = demonnic.chat.useContainer
  demonnic.chat.tabBox = Geyser.HBox:new({
    x = 0, y = 0,
    width = &quot;100%&quot;,
    height = &quot;10%&quot;,
    name = &quot;DemonChatTabs&quot;,
  }, demonnic.chat.container)
end

function demonnic.chat:create()
  --reset the UI
  demonnic.chat:resetUI()

  --Set some variables locally to increase readability
  local r = demonnic.chat.config.inactiveColors.r
  local g = demonnic.chat.config.inactiveColors.g
  local b = demonnic.chat.config.inactiveColors.b
  local winr = demonnic.chat.config.windowColors.r
  local wing = demonnic.chat.config.windowColors.g
  local winb = demonnic.chat.config.windowColors.b

  --iterate the table of channels and create some windows and tabs
  for i,tab in ipairs(demonnic.chat.config.channels) do
    demonnic.chat.tabs[tab] = Geyser.Label:new({
      name = string.format(&quot;tab%s&quot;, tab),
    }, demonnic.chat.tabBox)
    demonnic.chat.tabs[tab]:setFontSize(demonnic.chat.config.fontSize)
    demonnic.chat.tabs[tab]:echo(tab, demonnic.chat.config.inactiveTabText, &quot;c&quot;)
    demonnic.chat.tabs[tab]:setColor(r,g,b)
    demonnic.chat.tabs[tab]:setClickCallback(&quot;demonnicChatSwitch&quot;, tab)
    demonnic.chat.windows[tab] = Geyser.MiniConsole:new({
      x = 0,
      y = &quot;10%&quot;,
      height = &quot;90%&quot;,
      width = &quot;100%&quot;,
      name = string.format(&quot;win%s&quot;, tab),
    }, demonnic.chat.container)
    demonnic.chat.windows[tab]:setFontSize(demonnic.chat.config.fontSize)
    demonnic.chat.windows[tab]:setColor(winr, wing, winb)
    demonnic.chat.windows[tab]:setWrap(demonnic.chat.config.width)
    demonnic.chat.windows[tab]:hide()
  end

  local showme = demonnic.chat.config.Alltab or demonnic.chat.config.channels[1]
  demonnicChatSwitch(showme)
end

function demonnic.chat:append(chat)
  local r = demonnic.chat.config.windowColors.r
  local g = demonnic.chat.config.windowColors.g
  local b = demonnic.chat.config.windowColors.b
  selectCurrentLine()
  local ofr, ofg, ofb = getFgColor()
  local obr, obg, obb = getBgColor()
  setBgColor(r, g, b)
  copy()

  if demonnic.chat.config.timestamp then
    local timestamp = getTime(true, demonnic.chat.config.timestamp)
    local tsfg = {}
    local tsbg = {}
    local colorLeader = string.format(&quot;&lt;%s,%s,%s:%s,%s,%s&gt;&quot;,ofr,ofg,ofb,obr,obg,obb)
    local fullstamp = string.format(&quot;%s%s&quot;,colorLeader,timestamp)
    demonnic.chat.windows[chat]:decho(fullstamp)
    demonnic.chat.windows[chat]:echo(&quot; &quot;)
    if demonnic.chat.config.Alltab then
      demonnic.chat.windows[demonnic.chat.config.Alltab]:decho(fullstamp)
      demonnic.chat.windows[demonnic.chat.config.Alltab]:echo(&quot; &quot;)
    end
  end

  demonnic.chat.windows[chat]:append()

  if demonnic.chat.config.Alltab then
    appendBuffer(string.format(&quot;win%s&quot;, demonnic.chat.config.Alltab))
  end
end</script>
                  <eventHandlerList/>
              </Script>
              <Script isActive="yes" isFolder="no">
                  <name>demonnicOnStart</name>
                  <packageName></packageName>
                  <script>function demonnicOnStart()
  demonnic.chat:create()
end</script>
                  <eventHandlerList>
                      <string>sysLoadEvent</string>
                  </eventHandlerList>
              </Script>
              <Script isActive="yes" isFolder="no">
                  <name>echo functions</name>
                  <packageName></packageName>
                  <script>
function demonnic.chat:cecho(chat, message)
  local alltab = demonnic.chat.config.Alltab
  cecho(string.format(&quot;win%s&quot;,chat), message)
  if alltab and chat ~= alltab then
    cecho(string.format(&quot;win%s&quot;, alltab), message)
  end
end

function demonnic.chat:decho(chat, message)
  local alltab = demonnic.chat.config.Alltab
  decho(string.format(&quot;win%s&quot;,chat), message)
  if alltab and chat ~= alltab then
    decho(string.format(&quot;win%s&quot;, alltab), message)
  end
end

function demonnic.chat:hecho(chat, message)
  local alltab = demonnic.chat.config.Alltab
  hecho(string.format(&quot;win%s&quot;,chat), message)
  if alltab and chat ~= alltab then
    hecho(string.format(&quot;win%s&quot;, alltab), message)
  end
end

function demonnic.chat:echo(chat, message)
  local alltab = demonnic.chat.config.Alltab
  echo(string.format(&quot;win%s&quot;,chat), message)
  if alltab and chat ~= alltab then
    echo(string.format(&quot;win%s&quot;, alltab), message)
  end
end</script>
                  <eventHandlerList/>
              </Script>
              <Script isActive="yes" isFolder="no">
                  <name>demonnicOnInstall</name>
                  <packageName></packageName>
                  <script>function demonnicOnInstall(_, package)
  if package:find(&quot;ex_venture&quot;) then
    demonnicOnStart()
  end
end</script>
                  <eventHandlerList>
                      <string>sysInstall</string>
                  </eventHandlerList>
              </Script>
          </ScriptGroup>
      </ScriptGroup>
    </ScriptPackage>
    <KeyPackage/>
</MudletPackage>
